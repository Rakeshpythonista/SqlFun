PL/SQL - Data Types
> scalar
> Large Object
> Composite
> Reference

for more detail: https://www.tutorialspoint.com/plsql/plsql_data_types.htm
---------------------------------------------------
S.No	Category & Description
1	Scalar : Single values with no internal components, such as a NUMBER, DATE, or BOOLEAN.
2	Large Object (LOB) : Pointers to large objects that are stored separately from other data items, such as text, graphic images, video clips, and sound waveforms.
3	Composite : Data items that have internal components that can be accessed individually. For example, collections and records.
4	Reference : Pointers to other data items.
---------------------------------------------------
Most common type Scalar Data types use:
1 CHAR (max_length)
2 VARCHAR2(max_length)
3 NUMBER[precision,sale]
4 BINARY_INTEGER = PLSINTEGER
5 BINARY_FLOAT
6 BINARY_DOUBLE
7 BOOLEAN
8 DATE
9 TIMESTAMP (precision)
10 TIMESTAMP(p) WITH TIME ZONE
11 TIMESTAMP(p)WITH LOCAL TIME ZONE
12 INTERVAL(p) YEAR TO MONTH
13 INVERVAL(p) DAY TO SECOND(p)
------------------------------------------------------
PL/SQL Numeric Data Types and Subtypes
Following table lists out the PL/SQL pre-defined numeric data types and their sub-types −

S.No	Data Type & Description
1	PLS_INTEGER : Signed integer in range -2,147,483,648 through 2,147,483,647, represented in 32 bits
2	BINARY_INTEGER : Signed integer in range -2,147,483,648 through 2,147,483,647, represented in 32 bits
3	BINARY_FLOAT : Single-precision IEEE 754-format floating-point number
4	BINARY_DOUBLE : Double-precision IEEE 754-format floating-point number
5	NUMBER(prec, scale) : Fixed-point or floating-point number with absolute value in range 1E-130 to (but not including) 1.0E126. A NUMBER variable can also represent 0
6	DEC(prec, scale) : ANSI specific fixed-point type with maximum precision of 38 decimal digits
7	DECIMAL(prec, scale) : IBM specific fixed-point type with maximum precision of 38 decimal digits
8	NUMERIC(pre, secale) : Floating type with maximum precision of 38 decimal digits
9	DOUBLE PRECISION : ANSI specific floating-point type with maximum precision of 126 binary digits (approximately 38 decimal digits)
10	FLOAT : ANSI and IBM specific floating-point type with maximum precision of 126 binary digits (approximately 38 decimal digits)
11	INT : ANSI specific integer type with maximum precision of 38 decimal digits
12	INTEGER : ANSI and IBM specific integer type with maximum precision of 38 decimal digits
13	SMALLINT : ANSI and IBM specific integer type with maximum precision of 38 decimal digits
14	REAL : Floating-point type with maximum precision of 63 binary digits (approximately 18 decimal digits)
--------------------------------------------------------
PL/SQL Character Data Types and Subtypes
Following is the detail of PL/SQL pre-defined character data types and their sub-types −

S.No	Data Type & Description
1	CHAR : Fixed-length character string with maximum size of 32,767 bytes
2	VARCHAR2 : Variable-length character string with maximum size of 32,767 bytes
3	RAW : Variable-length binary or byte string with maximum size of 32,767 bytes, not interpreted by PL/SQL
4	NCHAR : Fixed-length national character string with maximum size of 32,767 bytes
5	NVARCHAR2 : Variable-length national character string with maximum size of 32,767 bytes
6	LONG : Variable-length character string with maximum size of 32,760 bytes
7	LONG RAW : Variable-length binary or byte string with maximum size of 32,760 bytes, not interpreted by PL/SQL
8	ROWID : Physical row identifier, the address of a row in an ordinary table
9	UROWID : Universal row identifier (physical, logical, or foreign row identifier)
--------------------------------------------------------
PL/SQL Datetime and Interval Types:
The DATE datatype is used to store fixed-length datetimes, which include the time of day in seconds since midnight. Valid dates range from January 1, 4712 BC to December 31, 9999 AD.
The default date format is set by the Oracle initialization parameter NLS_DATE_FORMAT. For example, the default might be 'DD-MON-YY', which includes a two-digit number for the day of the month, an abbreviation of the month name, and the last two digits of the year. For example, 01-OCT-12.

Each DATE includes the century, year, month, day, hour, minute, and second.
The following table shows the valid values for each field −
Field Name	   Valid Datetime Values	           Valid Interval Values
YEAR	     -4712 to 9999 (excluding year 0)	            Any nonzero integer
MONTH	                 01 to 12	                       0 to 11
DAY	    01 to 31 (limited by the values of MONTH
            and YEAR, according to the rules of the 
            calendar for the locale)	                    Any nonzero integer
HOUR	                 00 to 23	                        0 to 23
MINUTE	                 00 to 59	                        0 to 59
SECOND	   00 to 59.9(n), where 9(n) is the precision 
           of time fractional seconds	                     0 to 59.9(n), where 9(n) is the precision of interval fractional seconds
TIMEZONE_HOUR	-12 to 14 (range accommodates daylight 
                 savings time changes)	                       Not applicable
TIMEZONE_MINUTE	          00 to 59	                       Not applicable
TIMEZONE_REGION	   Found in the dynamic performance view 
                   V$TIMEZONE_NAMES	                       Not applicable
TIMEZONE_ABBR	   Found in the dynamic performance view 
                   V$TIMEZONE_NAMES	                       Not applicable
--------------------------------------------------------
PL/SQL Large Object (LOB) Data Types:
Large Object (LOB) data types refer to large data items such as text, graphic images, video clips, and sound waveforms. LOB data types allow efficient, random, piecewise access to this data. Following are the predefined PL/SQL LOB data types −

Data Type	    Description	                                                                                           Size
BFILE	     Used to store large binary objects in operating system files outside the database.	        System-dependent. Cannot exceed 4 gigabytes (GB).
BLOB	     Used to store large binary objects in the database.	                                             8 to 128 terabytes (TB) 
CLOB	     Used to store large blocks of character data in the database.	                                     8 to 128 TB
NCLOB	     Used to store large blocks of NCHAR data in the database.	                                             8 to 128 TB